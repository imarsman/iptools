# This is a goreleaser config file that handles building and sending builds to GitHub.
# You can install goreleaser on MacOs with Homebrew
# https://goreleaser.com/install/
# brew install goreleaser
# Quick notes
# Release locally
# goreleaser release --snapshot --rm-dist
# Release latest tagged version
# git tag -a v0.1.0 -m "First release"
# git push origin v0.1.0
# goreleaser release --rm-dist
# git push --delete origin v...

release:
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # What to do with the release notes in case there the release already exists.
  #
  # Valid options are:
  # - `keep-existing`: keep the existing notes
  # - `append`: append the current release notes to the existing notes
  # - `prepend`: prepend the current release notes to the existing notes
  # - `replace`: replace existing notes
  #
  # Default is `keep-existing`.
  mode: replace

  # Header template for the release body.
  # Defaults to empty.
  header: |
    ## iptools ({{ .Date }})

    iptools is a set of IP and network tools

    v0.1.35
    Added auto complete setup info

    v0.1.34
    Added MX lookup for domain lookup

    v0.1.33
    Added IPs for domain lookup

    v0.1.32
    Work to properly implement EUI-64

    v0.1.31
    Re-arranging ipv6 module

    v0.1.30
    Fixed logic for creating random mac addresses for interface IDs

    v0.1.29
    Switched from unique-local to private

    v0.1.28
    Added solicited node multicast output

    v0.1.27
    Small fixes and review and docs

    v0.1.26
    Fixed bit range extraction and multicast

    v0.1.25
    More multicast support

    v0.1.24
    Global ID handling

    v0.1.23
    Handling of type prefixes

    v0.1.22
    Added random IPV6 IPs call

    v0.1.21
    Work on mostly IPV6 address description

    v0.1.20
    First IP6 calls

    v0.1.19
    Fixed in-addr address and added ipv6

    v0.1.18
    Fixes and work on subnet handling

    v0.1.17
    Fixed wildcard mask call

    v0.1.16
    Adding more values to divide and ranges summary

    v0.1.15
    Added subnet mask prefix.

    v0.1.14
    Fix for subnet describe.

    v0.1.13
    Splitting ip4 naming to allow for later ip6

    v0.1.12
    Switched to net/netip Go 1.18 core version

    v0.1.11
    Using unexported fields for Subnet struct

    v0.1.10
    Fixing naming

    v0.1.9
    Simplified cmdline args

    v0.1.8
    Added subnet network listing call plus more testing

    v0.1.7
    Testing and switch to Go 1.18

    v0.1.6
    Fixes tied to improved understanding of subnets

    v0.1.5
    Added subnet splitting to subnets

    v0.1.4
    More subnet details

    v0.1.3
    Added binary to string output

    v0.1.2
    Re-ordering output

    v0.1.1
    Added subnet details call

    v0.1.0
    Initial release with subnetting

  # Footer template for the release body.
  # Defaults to empty.
  footer: |
    ## Enjoy

    Tag {{ .Tag }}

changelog:
  # Set this to true if you don't want any changelog at all.
  # Warning: this will also ignore any changelog files passed via `--release-notes`,
  # and will render an empty changelog.
  # This may result in an empty release notes on GitHub/GitLab/Gitea.
  skip: true

# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com
# .goreleaser.yaml
github_urls:
  # api: https://github.office.opendns.com/api/v3/
  # upload: https://github.office.opendns.com/api/uploads/
  # download: https://github.office.opendns.com/
  # set to true if you use a self-signed certificate
  skip_tls_verify: false

env_files:
  github_token: ~/.config/goreleaser/github_token

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy
    - go mod vendor
    # you may remove this if you don't need go generate
    # - go generate ./...
builds:
  - # env:
    env:
      - CGO_ENABLED=0
    ldflags:
      - >
        -X github.com/imarsman/iptools/cmd/args.GitCommit={{.ShortCommit}} 
        -X github.com/imarsman/iptools/cmd/args.GitLastTag={{.PreviousTag}}
        -X github.com/imarsman/iptools/cmd/args.GitExactTag={{.Tag}}
        -X github.com/imarsman/iptools/cmd/args.Date={{.Date}}

    id: iptools
    dir: .
    main: ./cmd/iptools
    binary: iptools
    goos:
      - linux
      - darwin

    # GOARCH to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are 386, amd64 and arm64.
    goarch:
      - amd64
      - arm64
archives:
  - replacements:
      darwin: darwin
      linux: linux
      windows: windows
      386: i386
      amd64: amd64
      arm64: arm64
checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ incpatch .Version }}-next"
